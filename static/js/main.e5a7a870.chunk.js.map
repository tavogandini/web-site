{"version":3,"sources":["contexts/navigation.tsx","utils/default-user.tsx","api/auth.tsx","contexts/auth.tsx","utils/media-query.tsx","app-info.tsx","pages/home/home.tsx","pages/generic/generic.tsx","api/services.js","pages/profile/profile.tsx","pages/clientes/clientes.tsx","pages/precios/precios.tsx","app-routes.tsx","pages/mc3/mc3.tsx","pages/jardin/jardin.tsx","components/user-panel/UserPanel.tsx","components/header/Header.tsx","components/footer/Footer.tsx","components/login-form/LoginForm.tsx","components/reset-password-form/ResetPasswordForm.tsx","components/create-account-form/CreateAccountForm.tsx","components/change-password-form/ChangePasswordForm.tsx","app-navigation.tsx","components/side-navigation-menu/SideNavigationMenu.tsx","utils/patches.tsx","layouts/side-nav-outer-toolbar/side-nav-outer-toolbar.tsx","layouts/single-card/single-card.tsx","Content.tsx","UnauthenticatedContent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavigationContext","createContext","useNavigation","useContext","NavigationProvider","props","_useState","useState","currentPath","_useState2","_slicedToArray","navigationData","setNavigationData","_jsx","Provider","_objectSpread","value","withNavigationWatcher","Component","path","WrappedComponent","useEffect","email","avatarUrl","signIn","_x","_x2","_signIn","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","password","wrap","_context","prev","next","console","log","abrupt","isOk","data","defaultUser","t0","message","stop","getUser","_getUser","_callee2","_context2","createAccount","_x3","_x4","_createAccount","_callee3","_context3","changePassword","_x5","_x6","_changePassword","_callee4","recoveryCode","_context4","resetPassword","_x7","_resetPassword","_callee5","_context5","AuthProvider","user","setUser","_useState3","_useState4","loading","setLoading","result","sent","useCallback","_ref2","sendSignInRequest","signOut","undefined","AuthContext","useAuth","useScreenSize","getScreenSize","screenSize","setScreenSize","onSizeChanged","subscribe","unsubscribe","handlers","xSmallMedia","window","matchMedia","smallMedia","mediumMedia","largeMedia","forEach","media","addListener","e","matches","handler","push","filter","item","isXSmall","isSmall","isMedium","isLarge","appInfo","title","grossProductData","state","total","llenos","vacios","Venta","nav","refList","React","createRef","DS","setDS","view","setView","_nav$navigationData","_view","replace","table","axios","get","baseURL","then","response","catch","error","nums","index","nom","Fragment","children","_jsxs","className","DataGrid","ref","dataSource","showBorders","focusedRowEnabled","defaultFocusedRowIndex","columnAutoWidth","columnHidingEnabled","Paging","defaultPageSize","Pager","showPageSizeSelector","showInfo","HeaderFilter","visible","Editing","allowUpdating","allowAdding","allowDeleting","mode","FilterRow","colCountByScreen","xs","sm","md","lg","store","type","key","url","expand","select","ID","producto","precio","tipo","routes","element","Chart","id","onPointClick","target","CommonSeriesSettings","argumentField","hoverMode","selectionMode","Label","Format","precision","Series","valueField","name","Legend","verticalAlignment","horizontalAlignment","Export","enabled","GenericPage","setLlenos","setVacios","Accordion","Item","min","onClick","Column","dataField","width","hidingPriority","caption","RequiredRule","Lookup","tipo_id","valueExpr","displayExpr","notes","setNotes","employee","FirstName","LastName","Position","Notes","Telefono","Form","defaultFormData","onFieldDataChanged","labelLocation","map","route","UserPanel","_ref","menuMode","_useAuth","navigate","useNavigate","navigateToProfile","menuItems","useMemo","text","icon","ContextMenu","items","showEvent","cssClass","my","at","List","Header","menuToggleEnabled","toggleMenu","Toolbar","location","widget","Button","stylingMode","locateInMenu","menuItemTemplate","height","Template","Footer","rest","Object","assign","_objectDestructuringEmpty","LoginForm","formData","useRef","onSubmit","_formData$current","preventDefault","current","notify","onCreateAccountClick","disabled","editorType","editorOptions","emailEditorOptions","EmailRule","passwordEditorOptions","rememberMeEditorOptions","ButtonItem","ButtonOptions","useSubmitBehavior","LoadIndicator","Link","to","placeholder","elementAttr","class","notificationText","ResetPasswordForm","submitButtonAttributes","CreateAccountForm","confirmPassword","confirmedPasswordEditorOptions","CustomRule","validationCallback","ChangePasswordForm","useParams","navigation","SideNavigationMenu","selectedItemChanged","openMenu","compactMode","onMenuReady","expanded","test","concat","treeViewRef","wrapperRef","getWrapperRef","prevElement","events","treeView","instance","selectItem","expandItem","collapseAll","TreeView","keyExpr","focusStateEnabled","expandEvent","onItemClick","onContentReady","useMenuPatch","_useScreenSize","setEnabled","setTimeout","SideNavOuterToolbar","scrollViewRef","_useMenuPatch","_useMenuPatch2","patchCssClass","MenuStatus","Opened","Closed","menuStatus","setMenuStatus","event","prevMenuStatus","stopPropagation","temporaryOpenMenu","TemporaryOpened","onOutsideClick","onNavigationChanged","_ref3","_scrollViewRef$curren","itemData","node","selected","scrollTo","Drawer","join","position","closeOnOutsideClick","openedStateMode","revealMode","minSize","maxSize","shading","opened","template","ScrollView","Children","SingleCard","description","Content","SideNavBarLayout","Routes","Route","Navigate","Date","getFullYear","UnauthenticatedContent","App","LoadPanel","Root","screenSizeClass","useScreenSizeClass","Router","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e5a7a870.chunk.js","sourcesContent":["import React, { useState, createContext, useContext, useEffect } from \"react\";\nimport type { NavigationContextType } from \"../types\";\n\nconst NavigationContext = createContext<NavigationContextType>(\n  {} as NavigationContextType\n);\nconst useNavigation = () => useContext(NavigationContext);\n\nfunction NavigationProvider(props: React.PropsWithChildren<unknown>) {\n  const [navigationData, setNavigationData] = useState({\n    currentPath: \"\",\n  });\n\n  return (\n    <NavigationContext.Provider\n      value={{ navigationData, setNavigationData }}\n      {...props}\n    />\n  );\n}\n\nfunction withNavigationWatcher(Component: React.ElementType, path: string) {\n  const WrappedComponent = function (props: Record<string, unknown>) {\n    const { setNavigationData } = useNavigation();\n\n    useEffect(() => {\n      setNavigationData!({ currentPath: path });\n    }, [path, setNavigationData]);\n\n    return <Component {...props} />;\n  };\n  return <WrappedComponent />;\n}\n\nexport { NavigationProvider, useNavigation, withNavigationWatcher };\n","export default {\n  email: \"chicho@gmail.com\",\n  avatarUrl: \"\",\n};\n","import defaultUser from '../utils/default-user';\n\nexport async function signIn(email: string, password: string) {\n  try {\n    // Send request\n    console.log(email, password);\n\n    return {\n      isOk: true,\n      data: defaultUser\n    };\n  }\n  catch {\n    return {\n      isOk: false,\n      message: \"Authentication failed\"\n    };\n  }\n}\n\nexport async function getUser() {\n  try {\n    // Send request\n\n    return {\n      isOk: true,\n      data: defaultUser\n    };\n  }\n  catch {\n    return {\n      isOk: false\n    };\n  }\n}\n\nexport async function createAccount(email: string, password: string) {\n  try {\n    // Send request\n    console.log(email, password);\n\n    return {\n      isOk: true\n    };\n  }\n  catch {\n    return {\n      isOk: false,\n      message: \"Failed to create account\"\n    };\n  }\n}\n\nexport async function changePassword(email: string, recoveryCode?: string) {\n  try {\n    // Send request\n    console.log(email, recoveryCode);\n\n    return {\n      isOk: true\n    };\n  }\n  catch {\n    return {\n      isOk: false,\n      message: \"Failed to change password\"\n    }\n  }\n}\n\nexport async function resetPassword(email: string) {\n  try {\n    // Send request\n    console.log(email);\n\n    return {\n      isOk: true\n    };\n  }\n  catch {\n    return {\n      isOk: false,\n      message: \"Failed to reset password\"\n    };\n  }\n}\n","import React, { useState, useEffect, createContext, useContext, useCallback } from 'react';\nimport { getUser, signIn as sendSignInRequest } from '../api/auth';\nimport type { User, AuthContextType } from '../types';\n\nfunction AuthProvider(props: React.PropsWithChildren<unknown>) {\n  const [user, setUser] = useState<User>();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async function () {\n      const result = await getUser();\n      if (result.isOk) {\n        setUser(result.data);\n      }\n\n      setLoading(false);\n    })();\n  }, []);\n\n  const signIn = useCallback(async (email: string, password: string) => {\n    const result = await sendSignInRequest(email, password);\n    if (result.isOk) {\n      setUser(result.data);\n    }\n\n    return result;\n  }, []);\n\n  const signOut = useCallback(() => {\n    setUser(undefined);\n  }, []);\n\n\n  return (\n    <AuthContext.Provider value={{ user, signIn, signOut, loading }} {...props} />\n  );\n}\n\nconst AuthContext = createContext<AuthContextType>({ loading: false } as AuthContextType);\nconst useAuth = () => useContext(AuthContext);\n\nexport { AuthProvider, useAuth }\n","import { useState, useCallback, useEffect } from 'react';\nimport type { Handle } from '../types';\n\nexport const useScreenSize = () => {\n  const [screenSize, setScreenSize] = useState(getScreenSize());\n  const onSizeChanged = useCallback(() => {\n    setScreenSize(getScreenSize());\n  }, []);\n\n  useEffect(() => {\n    subscribe(onSizeChanged);\n\n    return () => {\n      unsubscribe(onSizeChanged);\n    };\n  }, [onSizeChanged]);\n\n  return screenSize;\n};\n\nexport const useScreenSizeClass = () => {\n  const screenSize = useScreenSize();\n\n  if (screenSize.isLarge) {\n    return 'screen-large';\n  }\n\n  if (screenSize.isMedium) {\n    return 'screen-medium';\n  }\n\n  if (screenSize.isSmall) {\n    return 'screen-small';\n  }\n\n  return 'screen-x-small';\n}\n\nlet handlers: Handle[] = [];\nconst xSmallMedia = window.matchMedia('(max-width: 599.99px)');\nconst smallMedia = window.matchMedia('(min-width: 600px) and (max-width: 959.99px)');\nconst mediumMedia = window.matchMedia('(min-width: 960px) and (max-width: 1279.99px)');\nconst largeMedia = window.matchMedia('(min-width: 1280px)');\n\n[xSmallMedia, smallMedia, mediumMedia, largeMedia].forEach(media => {\n  media.addListener((e) => {\n    e.matches && handlers.forEach(handler => handler());\n  });\n});\n\nconst subscribe = (handler: Handle) => handlers.push(handler);\n\nconst unsubscribe = (handler: Handle) => {\n  handlers = handlers.filter(item => item !== handler);\n};\n\nfunction getScreenSize() {\n  return {\n    isXSmall: xSmallMedia.matches,\n    isSmall: smallMedia.matches,\n    isMedium: mediumMedia.matches,\n    isLarge: largeMedia.matches\n  };\n}\n","const appInfo = {\n  title: \"Los Andes App\",\n};\nexport default appInfo;\n","import React from \"react\";\nimport \"./home.scss\";\nimport {\n  Chart,\n  Series,\n  CommonSeriesSettings,\n  Label,\n  Format,\n  Legend,\n  Export,\n} from \"devextreme-react/chart\";\n\nconst grossProductData = [\n  {\n    state: \"TOTAL\",\n    total: 153,\n    llenos: 125,\n    vacios: 48,\n  },\n  {\n    state: \"B° MC3\",\n    total: 110,\n    llenos: 90,\n    vacios: 32,\n  },\n  {\n    state: \"B° Jardin\",\n    total: 43,\n    llenos: 35,\n    vacios: 16,\n  },\n];\n\n// https://js.devexpress.com/Demos/Widgetsgallery/\n\nexport default function Home() {\n  return (\n    <React.Fragment>\n      <h2 className={\"content-block\"}>Datos generales</h2>\n      <div className={\"content-block\"}>\n        <div className={\"dx-card responsive-paddings\"}>\n          <Chart\n            id=\"chart\"\n            title=\"20L\"\n            dataSource={grossProductData}\n            onPointClick={(e) => e.target.select()}\n          >\n            <CommonSeriesSettings\n              argumentField=\"state\"\n              type=\"bar\"\n              hoverMode=\"allArgumentPoints\"\n              selectionMode=\"allArgumentPoints\"\n            >\n              <Label visible={true}>\n                <Format type=\"fixedPoint\" precision={0} />\n              </Label>\n            </CommonSeriesSettings>\n            <Series valueField=\"total\" name=\"Total\" />\n            <Series valueField=\"llenos\" name=\"Llenos\" />\n            <Series valueField=\"vacios\" name=\"Vacios\" />\n            <Legend\n              verticalAlignment=\"bottom\"\n              horizontalAlignment=\"center\"\n            ></Legend>\n            <Export enabled={true} />\n          </Chart>\n\n          <Chart\n            id=\"chart\"\n            title=\"12L\"\n            dataSource={grossProductData}\n            onPointClick={(e) => e.target.select()}\n          >\n            <CommonSeriesSettings\n              argumentField=\"state\"\n              type=\"bar\"\n              hoverMode=\"allArgumentPoints\"\n              selectionMode=\"allArgumentPoints\"\n            >\n              <Label visible={true}>\n                <Format type=\"fixedPoint\" precision={0} />\n              </Label>\n            </CommonSeriesSettings>\n            <Series valueField=\"total\" name=\"Total\" />\n            <Series valueField=\"llenos\" name=\"Llenos\" />\n            <Series valueField=\"vacios\" name=\"Vacios\" />\n            <Legend\n              verticalAlignment=\"bottom\"\n              horizontalAlignment=\"center\"\n            ></Legend>\n            <Export enabled={true} />\n          </Chart>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles.scss\";\nimport DataGrid, {\n  Pager,\n  Paging,\n  FilterRow,\n  HeaderFilter,\n  Editing,\n  Lookup,\n  Column,\n} from \"devextreme-react/data-grid\";\nimport { getAll } from \"../../api/services\";\nimport { useNavigation } from \"../../contexts/navigation\";\n\nexport default function Venta() {\n  const nav = useNavigation();\n  let refList: any = React.createRef();\n  const [DS, setDS] = useState([]);\n  const [view, setView] = useState(\"\");\n\n  useEffect(() => {\n    let _view = nav.navigationData?.currentPath.replace(\"/\", \"\");\n    setView(_view);\n  }, [useNavigation()]);\n\n  useEffect(() => {\n    getAll(view).then((response) => {\n      setDS(response);\n    });\n  }, [view]);\n\n  const nums = [];\n  for (let index = 0; index < 100; index++) {\n    nums.push({ nom: index });\n  }\n\n  // const locales = [{ nom: \"MC3\" }, { nom: \"Jardin\" }];\n  const productos = [{ nom: \"20L\" }, { nom: \"12L\" }];\n  const clientes = [{ nom: \"Particular\" }, { nom: \"Juan\" }, { nom: \"Pepe\" }];\n  const medio_de_pago = [\n    { nom: \"Mercado Pago\" },\n    { nom: \"Efectivo\" },\n    { nom: \"A credito\" },\n  ];\n\n  return (\n    <React.Fragment>\n      <div className={\"content-block dx-card responsive-paddings\"}>\n        <h6 className={\"content-block\"}>{view}</h6>\n        <DataGrid\n          ref={refList || undefined}\n          className={\"dx-card wide-card\"}\n          dataSource={DS}\n          showBorders={false}\n          focusedRowEnabled={true}\n          defaultFocusedRowIndex={0}\n          columnAutoWidth={true}\n          columnHidingEnabled={true}\n        >\n          <Paging defaultPageSize={10} />\n          <Pager showPageSizeSelector={true} showInfo={true} />\n          <HeaderFilter visible={true} />\n          <Editing\n            allowUpdating={true}\n            allowAdding={true}\n            allowDeleting={true}\n            mode=\"popup\"\n          />\n          <FilterRow visible={true} />\n          {/* <Column dataField=\"producto\">\n            <Lookup dataSource={productos} valueExpr=\"nom\" displayExpr=\"nom\" />\n          </Column>\n          <Column dataField=\"cliente\">\n            <Lookup dataSource={clientes} valueExpr=\"nom\" displayExpr=\"nom\" />\n          </Column>\n          <Column dataField=\"cantidad\">\n            <Lookup dataSource={nums} valueExpr=\"nom\" displayExpr=\"nom\" />\n          </Column>\n          <Column dataField=\"medio_pago\">\n            <Lookup\n              dataSource={medio_de_pago}\n              valueExpr=\"nom\"\n              displayExpr=\"nom\"\n            />\n          </Column> */}\n        </DataGrid>\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst colCountByScreen = {\n  xs: 1,\n  sm: 2,\n  md: 3,\n  lg: 4,\n};\n","import axios from \"axios\";\r\nimport { baseURL } from \"../../package.json\";\r\n\r\nfunction getAll(table) {\r\n  return axios\r\n    .get(baseURL / +table)\r\n    .then((response) => response.data)\r\n    .catch((error) => console.log(error.response));\r\n}\r\n\r\nexport { getAll };\r\n","import React, { useState } from \"react\";\nimport \"./profile.scss\";\nimport Form from \"devextreme-react/form\";\n\nexport default function Profile() {\n  const [notes, setNotes] = useState(\"....\");\n  const employee = {\n    ID: 7,\n    FirstName: \"Nombre Cliente 1\",\n    LastName: \"Johnson\",\n    Position: \"Controller\",\n    Notes: notes,\n    Telefono: 2664546134,\n  };\n\n  return (\n    <React.Fragment>\n      <h2 className={\"content-block\"}>Clientes</h2>\n\n      {/* <div className={\"content-block dx-card responsive-paddings\"}></div> */}\n\n      <div className={\"content-block dx-card responsive-paddings\"}>\n        <Form\n          id={\"form\"}\n          defaultFormData={employee}\n          onFieldDataChanged={(e) =>\n            e.dataField === \"Notes\" && setNotes(e.value)\n          }\n          labelLocation={\"top\"}\n          colCountByScreen={colCountByScreen}\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst colCountByScreen = {\n  xs: 1,\n  sm: 2,\n  md: 3,\n  lg: 4,\n};\n","import React from \"react\";\nimport \"devextreme/data/odata/store\";\nimport DataGrid, {\n  Column,\n  Pager,\n  Paging,\n  FilterRow,\n  Editing,\n} from \"devextreme-react/data-grid\";\n\nexport default function Clientes() {\n  return (\n    <React.Fragment>\n      <h2 className={\"content-block\"}>Clientes</h2>\n\n      <DataGrid\n        className={\"dx-card wide-card\"}\n        dataSource={dataSource as any}\n        showBorders={false}\n        focusedRowEnabled={true}\n        defaultFocusedRowIndex={0}\n        columnAutoWidth={true}\n        columnHidingEnabled={true}\n      >\n        <Paging defaultPageSize={10} />\n        <Pager showPageSizeSelector={true} showInfo={true} />\n        <FilterRow visible={true} />\n        <Column dataField={\"ID\"} width={50} hidingPriority={2} />\n        <Column\n          dataField={\"Task_Subject\"}\n          width={190}\n          caption={\"Nombre\"}\n          hidingPriority={8}\n        />\n        <Column\n          dataField={\"Task_Status\"}\n          caption={\"Estado retiro\"}\n          hidingPriority={6}\n        />\n        <Column\n          dataField={\"Task_Status\"}\n          caption={\"Estado retiro\"}\n          hidingPriority={6}\n        />\n        <Editing\n          allowUpdating={true}\n          allowAdding={true}\n          allowDeleting={true}\n          mode=\"row\"\n        />\n      </DataGrid>\n    </React.Fragment>\n  );\n}\n\nconst dataSource = {\n  store: {\n    type: \"odata\",\n    key: \"Task_ID\",\n    url: \"https://js.devexpress.com/Demos/DevAV/odata/Tasks\",\n  },\n  expand: \"ResponsibleEmployee\",\n  select: [\n    \"Task_ID\",\n    \"Task_Subject\",\n    \"Task_Start_Date\",\n    \"Task_Due_Date\",\n    \"Task_Status\",\n    \"Task_Priority\",\n    \"Task_Completion\",\n    \"ResponsibleEmployee/Employee_Full_Name\",\n  ],\n};\n\nconst priorities = [\n  { name: \"High\", value: 4 },\n  { name: \"Urgent\", value: 3 },\n  { name: \"Normal\", value: 2 },\n  { name: \"Low\", value: 1 },\n];\n","import React from \"react\";\nimport DataGrid, {\n  Column,\n  Pager,\n  Paging,\n  FilterRow,\n  Editing,\n  RequiredRule,\n  Lookup,\n  HeaderFilter,\n} from \"devextreme-react/data-grid\";\n// import SelectBox from \"devextreme-react/select-box\";\n\nconst dataSource = [\n  {\n    ID: 1,\n    producto: \"Bidon 20L\",\n    precio: \"300\",\n    tipo: \"retornable\",\n  },\n  {\n    ID: 2,\n    producto: \"Bidon 12L\",\n    precio: \"200\",\n    tipo: \"retornable\",\n  },\n  {\n    ID: 3,\n    producto: \"Agua destilada 5L\",\n    precio: \"100\",\n    tipo: \"descartable\",\n  },\n];\n\nexport default function Precios() {\n  return (\n    <React.Fragment>\n      <h2 className={\"content-block\"}>Productos</h2>\n\n      <DataGrid\n        className={\"dx-card wide-card\"}\n        dataSource={dataSource as any}\n        showBorders={false}\n        focusedRowEnabled={true}\n        defaultFocusedRowIndex={0}\n        columnAutoWidth={true}\n        columnHidingEnabled={true}\n      >\n        <Paging defaultPageSize={10} />\n        <Pager showPageSizeSelector={true} showInfo={true} />\n        <HeaderFilter visible={true} />\n        <FilterRow visible={true} />\n        <Column dataField={\"ID\"} width={50} hidingPriority={2} />\n        <Column dataField=\"producto\" caption=\"Producto\" width={200}>\n          <RequiredRule />\n        </Column>\n        <Column dataField={\"precio\"} caption={\"Precio\"} hidingPriority={6} />\n        <Editing\n          mode=\"popup\" // 'batch' | 'cell' | 'form' | 'popup'\n          allowUpdating={true}\n          allowAdding={true}\n          allowDeleting={true}\n        />\n\n        <Column dataField=\"tipo\">\n          <Lookup\n            dataSource={[{ tipo_id: 1, name: \"1° Tipo nah\" }]}\n            valueExpr=\"tipo_id\"\n            displayExpr=\"name\"\n          />\n        </Column>\n      </DataGrid>\n    </React.Fragment>\n  );\n}\n\n// const prods = [\n//   {\n//     id: 1,\n//     name: \"20L\",\n//   },\n//   {\n//     id: 2,\n//     name: \"12L\",\n//   },\n// ];\n\n// function statusEditorRender(cell: any) {\n//   console.log(\" -----> \", cell.value);\n//   return (\n//     <SelectBox\n//       defaultValue={cell.value} //\n//       onValueChanged={(e) => cell.setValue(e.value)}\n//       itemRender={(e) => itemRender(e)}\n//     />\n//   );\n// }\n\n// function itemRender(data: any) {\n//   if (data != null) {\n//     console.log(\"itemRender -----> \", data);\n//     return (\n//       <div>\n//         <span className=\"middle\">{data.name}</span>\n//       </div>\n//     );\n//   }\n//   return <span>(All)</span>;\n// }\n","import {\n  HomePage,\n  GenericPage,\n  ClientesPage,\n  ProfilePage,\n  MC3Page,\n  JardinPage,\n  PreciosPage,\n} from \"./pages\";\nimport { withNavigationWatcher } from \"./contexts/navigation\";\n\nconst routes = [\n  {\n    path: \"/home\",\n    element: HomePage,\n  },\n  {\n    path: \"/ventas\",\n    element: GenericPage,\n  },\n  {\n    path: \"/stocks\",\n    element: GenericPage,\n  },\n  {\n    path: \"/mc3\",\n    element: MC3Page,\n  },\n  {\n    path: \"/jardin\",\n    element: JardinPage,\n  },\n  {\n    path: \"/clientes\",\n    element: ClientesPage,\n  },\n  {\n    path: \"/precios\",\n    element: PreciosPage,\n  },\n  {\n    path: \"/profile\",\n    element: ProfilePage,\n  },\n];\n\nexport default routes.map((route) => {\n  return {\n    ...route,\n    element: withNavigationWatcher(route.element, route.path),\n  };\n});\n","import React, { useState } from \"react\";\nimport \"./mc3.scss\";\nimport {\n  Chart,\n  Series,\n  CommonSeriesSettings,\n  Label,\n  Format,\n  Legend,\n  Export,\n} from \"devextreme-react/chart\";\nimport Accordion, { Item } from \"devextreme-react/accordion\";\n\nvar mc3 = {\n  Litros: 20,\n  Llenos: 10,\n  Vacios: 55,\n  Vendidos: 41,\n};\n\nexport default function Home() {\n  const [llenos, setLlenos] = useState(10);\n  const [vacios, setVacios] = useState(5);\n  const grossProductData = [\n    {\n      state: \"B° MC3\",\n      // total: llenos + vacios,\n      llenos: llenos,\n      vacios: vacios,\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* <h2 className={\"content-block\"}>Stock: Mirador del Cerro 3</h2> */}\n      <h2 className={\"content-block\"}> -- </h2>\n      <div className={\"content-block\"}>\n        <div className={\"dx-card responsive-paddings\"}>\n          <Accordion>\n            <Item title=\"20L Retornable\">\n              {/* <h6>20L</h6> */}\n              <form>\n                <span>Llenos</span>\n                <input type=\"text\" value={llenos} className={\"texts\"} min={0} />\n                <button\n                  onClick={() => setLlenos(llenos + 1)}\n                  className={\"texts\"}\n                >\n                  +{\" \"}\n                </button>\n                <button\n                  onClick={() => setLlenos(llenos - 1)}\n                  className={\"texts\"}\n                >\n                  -{\" \"}\n                </button>\n                <br />\n                <br />\n                <span>Vacios</span>\n                <input type=\"text\" value={vacios} className={\"texts\"} min={0} />\n                <button\n                  onClick={() => setVacios(vacios + 1)}\n                  className={\"texts\"}\n                >\n                  +{\" \"}\n                </button>\n                <button\n                  onClick={() => setVacios(vacios - 1)}\n                  className={\"texts\"}\n                >\n                  -{\" \"}\n                </button>\n              </form>\n\n              <Chart\n                id=\"chart\"\n                dataSource={grossProductData}\n                onPointClick={(e) => e.target.select()}\n              >\n                <CommonSeriesSettings\n                  argumentField=\"state\"\n                  type=\"bar\"\n                  hoverMode=\"allArgumentPoints\"\n                  selectionMode=\"allArgumentPoints\"\n                >\n                  <Label visible={true}>\n                    <Format type=\"fixedPoint\" precision={0} />\n                  </Label>\n                </CommonSeriesSettings>\n                {/* <Series valueField=\"total\" name=\"Total\" /> */}\n                <Series valueField=\"llenos\" name=\"Llenos\" />\n                <Series valueField=\"vacios\" name=\"Vacios\" />\n                <Legend\n                  verticalAlignment=\"bottom\"\n                  horizontalAlignment=\"center\"\n                ></Legend>\n                <Export enabled={true} />\n              </Chart>\n            </Item>\n            <Item title=\"12L Retornable\">\n              <form>\n                <span>Llenos</span>\n                <input type=\"text\" value={llenos} className={\"texts\"} min={0} />\n                <button\n                  onClick={() => setLlenos(llenos + 1)}\n                  className={\"texts\"}\n                >\n                  +{\" \"}\n                </button>\n                <button\n                  onClick={() => setLlenos(llenos - 1)}\n                  className={\"texts\"}\n                >\n                  -{\" \"}\n                </button>\n                <br />\n                <br />\n                <span>Vacios</span>\n                <input type=\"text\" value={vacios} className={\"texts\"} min={0} />\n                <button\n                  onClick={() => setVacios(vacios + 1)}\n                  className={\"texts\"}\n                >\n                  +{\" \"}\n                </button>\n                <button\n                  onClick={() => setVacios(vacios - 1)}\n                  className={\"texts\"}\n                >\n                  -{\" \"}\n                </button>\n              </form>\n\n              <Chart\n                id=\"chart\"\n                dataSource={grossProductData}\n                onPointClick={(e) => e.target.select()}\n              >\n                <CommonSeriesSettings\n                  argumentField=\"state\"\n                  type=\"bar\"\n                  hoverMode=\"allArgumentPoints\"\n                  selectionMode=\"allArgumentPoints\"\n                >\n                  <Label visible={true}>\n                    <Format type=\"fixedPoint\" precision={0} />\n                  </Label>\n                </CommonSeriesSettings>\n                {/* <Series valueField=\"total\" name=\"Total\" /> */}\n                <Series valueField=\"llenos\" name=\"Llenos\" />\n                <Series valueField=\"vacios\" name=\"Vacios\" />\n                <Legend\n                  verticalAlignment=\"bottom\"\n                  horizontalAlignment=\"center\"\n                ></Legend>\n                <Export enabled={true} />\n              </Chart>\n            </Item>\n          </Accordion>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./jardin.scss\";\nimport {\n  Chart,\n  Series,\n  CommonSeriesSettings,\n  Label,\n  Format,\n  Legend,\n  Export,\n} from \"devextreme-react/chart\";\nimport Accordion, { Item } from \"devextreme-react/accordion\";\n\nvar mc3 = {\n  Litros: 20,\n  Llenos: 10,\n  Vacios: 55,\n  Vendidos: 41,\n};\n\nexport default function Home() {\n  const [llenos, setLlenos] = useState(10);\n  const [vacios, setVacios] = useState(5);\n  const grossProductData = [\n    {\n      state: \"B° MC3\",\n      total: llenos + vacios,\n      llenos: llenos,\n      vacios: vacios,\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* <h2 className={\"content-block\"}>Stock: Mirador del Cerro 3</h2> */}\n      <h2 className={\"content-block\"}> -- </h2>\n      <div className={\"content-block\"}>\n        <div className={\"dx-card responsive-paddings\"}>\n          <Accordion>\n            <Item title=\"20L Retornable\">\n              {/* <h6>20L</h6> */}\n              <form>\n                <span>Llenos</span>\n                <input type=\"text\" value={llenos} className={\"texts\"} min={0} />\n                <button\n                  onClick={() => setLlenos(llenos + 1)}\n                  className={\"texts\"}\n                >\n                  +{\" \"}\n                </button>\n                <button\n                  onClick={() => setLlenos(llenos - 1)}\n                  className={\"texts\"}\n                >\n                  -{\" \"}\n                </button>\n                <br />\n                <br />\n                <span>Vacios</span>\n                <input type=\"text\" value={vacios} className={\"texts\"} min={0} />\n                <button\n                  onClick={() => setVacios(vacios + 1)}\n                  className={\"texts\"}\n                >\n                  +{\" \"}\n                </button>\n                <button\n                  onClick={() => setVacios(vacios - 1)}\n                  className={\"texts\"}\n                >\n                  -{\" \"}\n                </button>\n              </form>\n\n              <Chart\n                id=\"chart\"\n                dataSource={grossProductData}\n                onPointClick={(e) => e.target.select()}\n              >\n                <CommonSeriesSettings\n                  argumentField=\"state\"\n                  type=\"bar\"\n                  hoverMode=\"allArgumentPoints\"\n                  selectionMode=\"allArgumentPoints\"\n                >\n                  <Label visible={true}>\n                    <Format type=\"fixedPoint\" precision={0} />\n                  </Label>\n                </CommonSeriesSettings>\n                <Series valueField=\"total\" name=\"Total\" />\n                <Series valueField=\"llenos\" name=\"Llenos\" />\n                <Series valueField=\"vacios\" name=\"Vacios\" />\n                <Legend\n                  verticalAlignment=\"bottom\"\n                  horizontalAlignment=\"center\"\n                ></Legend>\n                <Export enabled={true} />\n              </Chart>\n            </Item>\n            <Item title=\"12L Retornable\">\n              <form>\n                <span>Llenos</span>\n                <input type=\"text\" value={llenos} className={\"texts\"} min={0} />\n                <button\n                  onClick={() => setLlenos(llenos + 1)}\n                  className={\"texts\"}\n                >\n                  +{\" \"}\n                </button>\n                <button\n                  onClick={() => setLlenos(llenos - 1)}\n                  className={\"texts\"}\n                >\n                  -{\" \"}\n                </button>\n                <br />\n                <br />\n                <span>Vacios</span>\n                <input type=\"text\" value={vacios} className={\"texts\"} min={0} />\n                <button\n                  onClick={() => setVacios(vacios + 1)}\n                  className={\"texts\"}\n                >\n                  +{\" \"}\n                </button>\n                <button\n                  onClick={() => setVacios(vacios - 1)}\n                  className={\"texts\"}\n                >\n                  -{\" \"}\n                </button>\n              </form>\n\n              <Chart\n                id=\"chart\"\n                dataSource={grossProductData}\n                onPointClick={(e) => e.target.select()}\n              >\n                <CommonSeriesSettings\n                  argumentField=\"state\"\n                  type=\"bar\"\n                  hoverMode=\"allArgumentPoints\"\n                  selectionMode=\"allArgumentPoints\"\n                >\n                  <Label visible={true}>\n                    <Format type=\"fixedPoint\" precision={0} />\n                  </Label>\n                </CommonSeriesSettings>\n                <Series valueField=\"total\" name=\"Total\" />\n                <Series valueField=\"llenos\" name=\"Llenos\" />\n                <Series valueField=\"vacios\" name=\"Vacios\" />\n                <Legend\n                  verticalAlignment=\"bottom\"\n                  horizontalAlignment=\"center\"\n                ></Legend>\n                <Export enabled={true} />\n              </Chart>\n            </Item>\n          </Accordion>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ContextMenu, { Position } from \"devextreme-react/context-menu\";\nimport List from \"devextreme-react/list\";\nimport { useAuth } from \"../../contexts/auth\";\nimport \"./UserPanel.scss\";\nimport type { UserPanelProps } from \"../../types\";\n\nexport default function UserPanel({ menuMode }: UserPanelProps) {\n  const { user, signOut } = useAuth();\n  const navigate = useNavigate();\n\n  function navigateToProfile() {\n    navigate(\"/profile\");\n  }\n  const menuItems = useMemo(\n    () => [\n      {\n        text: \"Profile\",\n        icon: \"user\",\n        onClick: navigateToProfile,\n      },\n      {\n        text: \"Logout\",\n        icon: \"runner\",\n        onClick: signOut,\n      },\n    ],\n    [signOut]\n  );\n  return (\n    <div className={\"user-panel\"}>\n      <div className={\"user-info\"}>\n        <div className={\"image-container\"}></div>\n        <div className={\"user-name\"}>{user!.email}</div>\n      </div>\n\n      {menuMode === \"context\" && (\n        <ContextMenu\n          items={menuItems}\n          target={\".user-button\"}\n          showEvent={\"dxclick\"}\n          width={210}\n          cssClass={\"user-menu\"}\n        >\n          <Position my={\"top center\"} at={\"bottom center\"} />\n        </ContextMenu>\n      )}\n      {menuMode === \"list\" && (\n        <List className={\"dx-toolbar-menu-action\"} items={menuItems} />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport Toolbar, { Item } from 'devextreme-react/toolbar';\nimport Button from 'devextreme-react/button';\nimport UserPanel from '../user-panel/UserPanel';\nimport './Header.scss';\nimport { Template } from 'devextreme-react/core/template';\nimport type { HeaderProps } from '../../types';\n\nexport default function Header({ menuToggleEnabled, title, toggleMenu }: HeaderProps) {\n  return (\n    <header className={'header-component'}>\n      <Toolbar className={'header-toolbar'}>\n        <Item\n          visible={menuToggleEnabled}\n          location={'before'}\n          widget={'dxButton'}\n          cssClass={'menu-button'}\n        >\n          <Button icon=\"menu\" stylingMode=\"text\" onClick={toggleMenu} />\n        </Item>\n        <Item\n          location={'before'}\n          cssClass={'header-title'}\n          text={title}\n          visible={!!title}\n        />\n        <Item\n          location={'after'}\n          locateInMenu={'auto'}\n          menuItemTemplate={'userPanelTemplate'}\n        >\n          <Button\n            className={'user-button authorization'}\n            width={210}\n            height={'100%'}\n            stylingMode={'text'}\n          >\n            <UserPanel menuMode={'context'} />\n          </Button>\n        </Item>\n        <Template name={'userPanelTemplate'}>\n          <UserPanel menuMode={'list'} />\n        </Template>\n      </Toolbar>\n    </header>\n)}\n","import React from 'react';\nimport './Footer.scss';\n\nexport default function Footer({ ...rest }) {\n  return <footer className={'footer'} {...rest} />;\n}\n","import React, { useState, useRef, useCallback } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Form, {\n  Item,\n  Label,\n  ButtonItem,\n  ButtonOptions,\n  RequiredRule,\n  EmailRule\n} from 'devextreme-react/form';\nimport LoadIndicator from 'devextreme-react/load-indicator';\nimport notify from 'devextreme/ui/notify';\nimport { useAuth } from '../../contexts/auth';\n\nimport './LoginForm.scss';\n\nexport default function LoginForm() {\n  const navigate = useNavigate();\n  const { signIn } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const formData = useRef({ email: '', password: '' });\n\n  const onSubmit = useCallback(async (e: any) => {\n    e.preventDefault();\n    const { email, password } = formData.current;\n    setLoading(true);\n\n    const result = await signIn(email, password);\n    if (!result.isOk) {\n      setLoading(false);\n      notify(result.message, 'error', 2000);\n    }\n  }, [signIn]);\n\n  const onCreateAccountClick = useCallback(() => {\n    navigate('/create-account');\n  }, [navigate]);\n\n  return (\n    <form className={'login-form'} onSubmit={onSubmit}>\n      <Form formData={formData.current} disabled={loading}>\n        <Item\n          dataField={'email'}\n          editorType={'dxTextBox'}\n          editorOptions={emailEditorOptions}\n        >\n          <RequiredRule message=\"Email is required\" />\n          <EmailRule message=\"Email is invalid\" />\n          <Label visible={false} />\n        </Item>\n        <Item\n          dataField={'password'}\n          editorType={'dxTextBox'}\n          editorOptions={passwordEditorOptions}\n        >\n          <RequiredRule message=\"Password is required\" />\n          <Label visible={false} />\n        </Item>\n        <Item\n          dataField={'rememberMe'}\n          editorType={'dxCheckBox'}\n          editorOptions={rememberMeEditorOptions}\n        >\n          <Label visible={false} />\n        </Item>\n        <ButtonItem>\n          <ButtonOptions\n            width={'100%'}\n            type={'default'}\n            useSubmitBehavior={true}\n          >\n            <span className=\"dx-button-text\">\n              {\n                loading\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\n                  : 'Sign In'\n              }\n            </span>\n          </ButtonOptions>\n        </ButtonItem>\n        <Item>\n          <div className={'link'}>\n            <Link to={'/reset-password'}>Forgot password?</Link>\n          </div>\n        </Item>\n        <ButtonItem>\n          <ButtonOptions\n            text={'Create an account'}\n            width={'100%'}\n            onClick={onCreateAccountClick}\n          />\n        </ButtonItem>\n      </Form>\n    </form>\n  );\n}\n\nconst emailEditorOptions = { stylingMode: 'filled', placeholder: 'Email', mode: 'email' };\nconst passwordEditorOptions = { stylingMode: 'filled', placeholder: 'Password', mode: 'password' };\nconst rememberMeEditorOptions = { text: 'Remember me', elementAttr: { class: 'form-text' } };\n","import React, { useState, useRef, useCallback } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Form, {\n  Item,\n  Label,\n  ButtonItem,\n  ButtonOptions,\n  RequiredRule,\n  EmailRule\n} from 'devextreme-react/form';\nimport LoadIndicator from 'devextreme-react/load-indicator';\nimport notify from 'devextreme/ui/notify';\nimport { resetPassword } from '../../api/auth';\nimport './ResetPasswordForm.scss';\n\nconst notificationText = 'We\\'ve sent a link to reset your password. Check your inbox.';\n\nexport default function ResetPasswordForm() {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const formData = useRef({ email: '', password: '' });\n\n  const onSubmit = useCallback(async (e: any) => {\n    e.preventDefault();\n    const { email } = formData.current;\n    setLoading(true);\n\n    const result = await resetPassword(email);\n    setLoading(false);\n\n    if (result.isOk) {\n      navigate('/login');\n      notify(notificationText, 'success', 2500);\n    } else {\n      notify(result.message, 'error', 2000);\n    }\n  }, [navigate]);\n\n  return (\n    <form className={'reset-password-form'} onSubmit={onSubmit}>\n      <Form formData={formData.current} disabled={loading}>\n        <Item\n          dataField={'email'}\n          editorType={'dxTextBox'}\n          editorOptions={emailEditorOptions}\n        >\n          <RequiredRule message=\"Email is required\" />\n          <EmailRule message=\"Email is invalid\" />\n          <Label visible={false} />\n        </Item>\n        <ButtonItem>\n          <ButtonOptions\n            elementAttr={submitButtonAttributes}\n            width={'100%'}\n            type={'default'}\n            useSubmitBehavior={true}\n          >\n            <span className=\"dx-button-text\">\n              {\n                loading\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\n                  : 'Reset my password'\n              }\n            </span>\n          </ButtonOptions>\n        </ButtonItem>\n        <Item>\n          <div className={'login-link'}>\n            Return to <Link to={'/login'}>Sign In</Link>\n          </div>\n        </Item>\n      </Form>\n    </form>\n  );\n}\n\nconst emailEditorOptions = { stylingMode: 'filled', placeholder: 'Email', mode: 'email' };\nconst submitButtonAttributes = { class: 'submit-button' };\n","import React, { useState, useRef, useCallback } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Form, {\n  Item,\n  Label,\n  ButtonItem,\n  ButtonOptions,\n  RequiredRule,\n  CustomRule,\n  EmailRule\n} from 'devextreme-react/form';\nimport notify from 'devextreme/ui/notify';\nimport LoadIndicator from 'devextreme-react/load-indicator';\nimport { createAccount } from '../../api/auth';\nimport { ValidationType } from '../../types';\nimport './CreateAccountForm.scss';\n\nexport default function CreateAccountForm() {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const formData = useRef({ email: '', password: '' });\n\n  const onSubmit = useCallback(async (e: any) => {\n    e.preventDefault();\n    const { email, password } = formData.current;\n    setLoading(true);\n\n    const result = await createAccount(email, password);\n    setLoading(false);\n\n    if (result.isOk) {\n      navigate('/login');\n    } else {\n      notify(result.message, 'error', 2000);\n    }\n  }, [navigate]);\n\n  const confirmPassword = useCallback(\n    ({ value }: ValidationType) => value === formData.current.password,\n    []\n  );\n\n  return (\n    <form className={'create-account-form'} onSubmit={onSubmit}>\n      <Form formData={formData.current} disabled={loading}>\n        <Item\n          dataField={'email'}\n          editorType={'dxTextBox'}\n          editorOptions={emailEditorOptions}\n        >\n          <RequiredRule message=\"Email is required\" />\n          <EmailRule message=\"Email is invalid\" />\n          <Label visible={false} />\n        </Item>\n        <Item\n          dataField={'password'}\n          editorType={'dxTextBox'}\n          editorOptions={passwordEditorOptions}\n        >\n          <RequiredRule message=\"Password is required\" />\n          <Label visible={false} />\n        </Item>\n        <Item\n          dataField={'confirmedPassword'}\n          editorType={'dxTextBox'}\n          editorOptions={confirmedPasswordEditorOptions}\n        >\n          <RequiredRule message=\"Password is required\" />\n          <CustomRule\n            message={'Passwords do not match'}\n            validationCallback={confirmPassword}\n          />\n          <Label visible={false} />\n        </Item>\n        <Item>\n          <div className='policy-info'>\n            By creating an account, you agree to the <Link to=\"#\">Terms of Service</Link> and <Link to=\"#\">Privacy Policy</Link>\n          </div>\n        </Item>\n        <ButtonItem>\n          <ButtonOptions\n            width={'100%'}\n            type={'default'}\n            useSubmitBehavior={true}\n          >\n            <span className=\"dx-button-text\">\n              {\n                loading\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\n                  : 'Create a new account'\n              }\n            </span>\n          </ButtonOptions>\n        </ButtonItem>\n        <Item>\n          <div className={'login-link'}>\n            Have an account? <Link to={'/login'}>Sign In</Link>\n          </div>\n        </Item>\n      </Form>\n    </form>\n  );\n}\n\nconst emailEditorOptions = { stylingMode: 'filled', placeholder: 'Email', mode: 'email' };\nconst passwordEditorOptions = { stylingMode: 'filled', placeholder: 'Password', mode: 'password' };\nconst confirmedPasswordEditorOptions = { stylingMode: 'filled', placeholder: 'Confirm Password', mode: 'password' };\n","import React, { useState, useRef, useCallback } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Form, {\n  Item,\n  Label,\n  ButtonItem,\n  ButtonOptions,\n  RequiredRule,\n  CustomRule,\n} from 'devextreme-react/form';\nimport LoadIndicator from 'devextreme-react/load-indicator';\nimport notify from 'devextreme/ui/notify';\nimport { ValidationType } from '../../types';\nimport { changePassword } from '../../api/auth';\n\nexport default function ChangePasswordForm() {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const formData = useRef({ password: '' });\n  const { recoveryCode } = useParams();\n\n  const onSubmit = useCallback(async (e: any) => {\n    e.preventDefault();\n    const { password } = formData.current;\n    setLoading(true);\n\n    const result = await changePassword(password, recoveryCode);\n    setLoading(false);\n\n    if (result.isOk) {\n      navigate('/login');\n    } else {\n      notify(result.message, 'error', 2000);\n    }\n  }, [navigate, recoveryCode]);\n\n  const confirmPassword = useCallback(\n    ({ value }: ValidationType) => value === formData.current.password,\n    []\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Form formData={formData.current} disabled={loading}>\n        <Item\n          dataField={'password'}\n          editorType={'dxTextBox'}\n          editorOptions={passwordEditorOptions}\n        >\n          <RequiredRule message=\"Password is required\" />\n          <Label visible={false} />\n        </Item>\n        <Item\n          dataField={'confirmedPassword'}\n          editorType={'dxTextBox'}\n          editorOptions={confirmedPasswordEditorOptions}\n        >\n          <RequiredRule message=\"Password is required\" />\n          <CustomRule\n            message={'Passwords do not match'}\n            validationCallback={confirmPassword}\n          />\n          <Label visible={false} />\n        </Item>\n        <ButtonItem>\n          <ButtonOptions\n            width={'100%'}\n            type={'default'}\n            useSubmitBehavior={true}\n          >\n            <span className=\"dx-button-text\">\n              {\n                loading\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\n                  : 'Continue'\n              }\n            </span>\n          </ButtonOptions>\n        </ButtonItem>\n      </Form>\n    </form>\n  );\n}\n\nconst passwordEditorOptions = { stylingMode: 'filled', placeholder: 'Password', mode: 'password' };\nconst confirmedPasswordEditorOptions = { stylingMode: 'filled', placeholder: 'Confirm Password', mode: 'password' };\n","export const navigation = [\n  {\n    text: \"Home\",\n    path: \"/home\",\n    icon: \"home\",\n  },\n  {\n    text: \"Ventas\",\n    path: \"/ventas\",\n    icon: \"folder\",\n  },\n  {\n    text: \"Stocks --\",\n    path: \"/stocks\",\n    icon: \"folder\",\n  },\n  {\n    text: \"Stocks\",\n    icon: \"folder\",\n    items: [\n      {\n        text: \"B° MC3\",\n        path: \"/mc3\",\n      },\n      {\n        text: \"B° jardin\",\n        path: \"/jardin\",\n      },\n    ],\n  },\n  {\n    text: \"Nuestros productos\",\n    path: \"/precios\",\n    icon: \"folder\",\n  },\n  {\n    text: \"Clientes\",\n    path: \"/clientes\",\n    icon: \"folder\",\n  },\n];\n","import React, { useEffect, useRef, useCallback, useMemo } from 'react';\nimport TreeView from 'devextreme-react/tree-view';\nimport { navigation } from '../../app-navigation';\nimport { useNavigation } from '../../contexts/navigation';\nimport { useScreenSize } from '../../utils/media-query';\nimport './SideNavigationMenu.scss';\nimport type { SideNavigationMenuProps } from '../../types';\n\nimport * as events from 'devextreme/events';\n\nexport default function SideNavigationMenu(props: React.PropsWithChildren<SideNavigationMenuProps>) {\n  const {\n    children,\n    selectedItemChanged,\n    openMenu,\n    compactMode,\n    onMenuReady\n  } = props;\n\n  const { isLarge } = useScreenSize();\n  function normalizePath () {\n    return navigation.map((item) => (\n      { ...item, expanded: isLarge, path: item.path && !(/^\\//.test(item.path)) ? `/${item.path}` : item.path }\n    ))\n  }\n\n  const items = useMemo(\n    normalizePath,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const { navigationData: { currentPath } } = useNavigation();\n\n  const treeViewRef = useRef<TreeView>(null);\n  const wrapperRef = useRef<HTMLDivElement>();\n  const getWrapperRef = useCallback((element: HTMLDivElement) => {\n    const prevElement = wrapperRef.current;\n    if (prevElement) {\n      events.off(prevElement, 'dxclick');\n    }\n\n    wrapperRef.current = element;\n    events.on(element, 'dxclick', (e: React.PointerEvent) => {\n      openMenu(e);\n    });\n  }, [openMenu]);\n\n  useEffect(() => {\n    const treeView = treeViewRef.current && treeViewRef.current.instance;\n    if (!treeView) {\n      return;\n    }\n\n    if (currentPath !== undefined) {\n      treeView.selectItem(currentPath);\n      treeView.expandItem(currentPath);\n    }\n\n    if (compactMode) {\n      treeView.collapseAll();\n    }\n  }, [currentPath, compactMode]);\n\n  return (\n    <div\n      className={'dx-swatch-additional side-navigation-menu'}\n      ref={getWrapperRef}\n    >\n      {children}\n      <div className={'menu-container'}>\n        <TreeView\n          ref={treeViewRef}\n          items={items}\n          keyExpr={'path'}\n          selectionMode={'single'}\n          focusStateEnabled={false}\n          expandEvent={'click'}\n          onItemClick={selectedItemChanged}\n          onContentReady={onMenuReady}\n          width={'100%'}\n        />\n      </div>\n    </div>\n  );\n}\n","import { useState, useCallback } from 'react';\nimport { useScreenSize } from './media-query';\n\nexport function useMenuPatch() {\n  const { isSmall, isMedium } = useScreenSize();\n  const [enabled, setEnabled] = useState(isSmall || isMedium);\n  const onMenuReady = useCallback(() => {\n    if (!enabled) {\n      return;\n    }\n\n    setTimeout(() => setEnabled(false));\n  }, [enabled]);\n\n  return [enabled ? 'pre-init-blink-fix' : '', onMenuReady] as [string, () => void];\n}\n","import Drawer from 'devextreme-react/drawer';\nimport ScrollView from 'devextreme-react/scroll-view';\nimport React, { useState, useCallback, useRef } from 'react';\nimport { useNavigate } from 'react-router';\nimport { Header, SideNavigationMenu, Footer } from '../../components';\nimport './side-nav-outer-toolbar.scss';\nimport { useScreenSize } from '../../utils/media-query';\nimport { Template } from 'devextreme-react/core/template';\nimport { useMenuPatch } from '../../utils/patches';\nimport { ClickEvent } from 'devextreme/ui/button';\nimport { ItemClickEvent } from 'devextreme/ui/tree_view';\nimport type { SideNavToolbarProps } from '../../types';\n\nexport default function SideNavOuterToolbar({ title, children }: React.PropsWithChildren<SideNavToolbarProps>) {\n  const scrollViewRef = useRef<ScrollView>(null);\n  const navigate = useNavigate();\n  const { isXSmall, isLarge } = useScreenSize();\n  const [patchCssClass, onMenuReady] = useMenuPatch();\n  const [menuStatus, setMenuStatus] = useState(\n    isLarge ? MenuStatus.Opened : MenuStatus.Closed\n  );\n\n  const toggleMenu = useCallback(({ event }: ClickEvent) => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\n        ? MenuStatus.Opened\n        : MenuStatus.Closed\n    );\n    event?.stopPropagation();\n  }, []);\n\n  const temporaryOpenMenu = useCallback(() => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\n        ? MenuStatus.TemporaryOpened\n        : prevMenuStatus\n    );\n  }, []);\n\n  const onOutsideClick = useCallback(() => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus !== MenuStatus.Closed && !isLarge\n        ? MenuStatus.Closed\n        : prevMenuStatus\n    );\n    return menuStatus === MenuStatus.Closed ? true : false;\n  }, [isLarge]);\n\n  const onNavigationChanged = useCallback(({ itemData, event, node }: ItemClickEvent) => {\n    if (menuStatus === MenuStatus.Closed || !itemData?.path || node?.selected) {\n      event?.preventDefault();\n      return;\n    }\n\n    navigate(itemData.path);\n    scrollViewRef.current?.instance.scrollTo(0);\n\n    if (!isLarge || menuStatus === MenuStatus.TemporaryOpened) {\n      setMenuStatus(MenuStatus.Closed);\n      event?.stopPropagation();\n    }\n  }, [navigate, menuStatus, isLarge]);\n\n  return (\n    <div className={'side-nav-outer-toolbar'}>\n      <Header\n        menuToggleEnabled\n        toggleMenu={toggleMenu}\n        title={title}\n      />\n      <Drawer\n        className={['drawer', patchCssClass].join(' ')}\n        position={'before'}\n        closeOnOutsideClick={onOutsideClick}\n        openedStateMode={isLarge ? 'shrink' : 'overlap'}\n        revealMode={isXSmall ? 'slide' : 'expand'}\n        minSize={isXSmall ? 0 : 60}\n        maxSize={250}\n        shading={isLarge ? false : true}\n        opened={menuStatus === MenuStatus.Closed ? false : true}\n        template={'menu'}\n      >\n        <div className={'container'}>\n          <ScrollView ref={scrollViewRef} className={'layout-body with-footer'}>\n            <div className={'content'}>\n              {React.Children.map(children, (item: any) => {\n                return item.type !== Footer && item;\n              })}\n            </div>\n            <div className={'content-block'}>\n              {React.Children.map(children, (item: any) => {\n                return item.type === Footer && item;\n              })}\n            </div>\n          </ScrollView>\n        </div>\n        <Template name={'menu'}>\n          <SideNavigationMenu\n            compactMode={menuStatus === MenuStatus.Closed}\n            selectedItemChanged={onNavigationChanged}\n            openMenu={temporaryOpenMenu}\n            onMenuReady={onMenuReady}\n          >\n          </SideNavigationMenu>\n        </Template>\n      </Drawer>\n    </div>\n  );\n}\n\nconst MenuStatus = {\n  Closed: 1,\n  Opened: 2,\n  TemporaryOpened: 3\n};\n","import React from 'react';\nimport ScrollView from 'devextreme-react/scroll-view';\nimport './single-card.scss';\nimport type { SingleCardProps } from '../../types';\n\nexport default function SingleCard({ title, description, children }: React.PropsWithChildren<SingleCardProps>) {\n  return (\n    <ScrollView height={'100%'} width={'100%'} className={'with-footer single-card'}>\n      <div className={'dx-card content'}>\n        <div className={'header'}>\n          <div className={'title'}>{title}</div>\n          <div className={'description'}>{description}</div>\n        </div>\n        {children}\n      </div>\n    </ScrollView>\n)}\n","import { Routes, Route, Navigate } from \"react-router-dom\";\nimport appInfo from \"./app-info\";\nimport routes from \"./app-routes\";\nimport { SideNavOuterToolbar as SideNavBarLayout } from \"./layouts\";\nimport { Footer } from \"./components\";\n\nexport default function Content() {\n  return (\n    <SideNavBarLayout title={appInfo.title}>\n      <Routes>\n        {routes.map(({ path, element }) => (\n          <Route key={path} path={path} element={element} />\n        ))}\n        <Route path=\"*\" element={<Navigate to=\"/home\" />} />\n      </Routes>\n      <Footer>\n        Copyright © 2014-{new Date().getFullYear()} {appInfo.title} Inc.\n        <br />\n        Algun texto de pie\n      </Footer>\n    </SideNavBarLayout>\n  );\n}\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport { SingleCard } from './layouts';\nimport { LoginForm, ResetPasswordForm, ChangePasswordForm, CreateAccountForm } from './components';\n\nexport default function UnauthenticatedContent() {\n  return (\n    <Routes>\n      <Route\n        path='/login' \n        element={\n          <SingleCard title=\"Sign In\">\n            <LoginForm />\n          </SingleCard>\n        }\n      />\n      <Route\n        path='/create-account'\n        element={\n          <SingleCard title=\"Sign Up\">\n            <CreateAccountForm />\n          </SingleCard>\n        }\n      />\n      <Route \n        path='/reset-password'\n        element={\n          <SingleCard\n            title=\"Reset Password\"\n            description=\"Please enter the email address that you used to register, and we will send you a link to reset your password via Email.\"\n          >\n            <ResetPasswordForm />\n          </SingleCard>\n        }\n      />\n      <Route\n        path='/change-password/:recoveryCode'\n        element={\n          <SingleCard title=\"Change Password\">\n            <ChangePasswordForm />\n          </SingleCard>\n        }\n      />\n      <Route path='*' element={<Navigate to={'/login'} />}></Route>\n    </Routes>\n  );\n}\n","import 'devextreme/dist/css/dx.common.css';\nimport './themes/generated/theme.base.css';\nimport './themes/generated/theme.additional.css';\nimport React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './dx-styles.scss';\nimport LoadPanel from 'devextreme-react/load-panel';\nimport { NavigationProvider } from './contexts/navigation';\nimport { AuthProvider, useAuth } from './contexts/auth';\nimport { useScreenSizeClass } from './utils/media-query';\nimport Content from './Content';\nimport UnauthenticatedContent from './UnauthenticatedContent';\n\nfunction App() {\n  const { user, loading } = useAuth();\n\n  if (loading) {\n    return <LoadPanel visible={true} />;\n  }\n\n  if (user) {\n    return <Content />;\n  }\n\n  return <UnauthenticatedContent />;\n}\n\nexport default function Root() {\n  const screenSizeClass = useScreenSizeClass();\n\n  return (\n    <Router>\n      <AuthProvider>\n        <NavigationProvider>\n          <div className={`app ${screenSizeClass}`}>\n            <App />\n          </div>\n        </NavigationProvider>\n      </AuthProvider>\n    </Router>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './polyfills';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}